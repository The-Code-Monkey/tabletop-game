{
  "root": true,
  "extends": [
    "hardcore",
    "hardcore/ts",
    "hardcore/prettier"
  ],
  "plugins": [
    "prettier"
  ],
  "parserOptions": {
    "project": true
  },
  "env": {
    "browser": true
  },
  "rules": {
    "prettier/prettier": "error",
    "@typescript-eslint/no-empty-interface": "off",
    "compat/compat": "off",
    "@typescript-eslint/prefer-readonly-parameter-types": "off",
    "promise/avoid-new": "off",
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "default",
        "format": ["camelCase"]
      },
      {
        "selector": "variable",
        "format": ["camelCase", "UPPER_CASE"]
      },
      {
        "selector": "variable",
        "types": ["boolean"],
        "format": ["PascalCase"],
        "prefix": ["is", "should", "has", "can", "did", "will"]
      },
      {
        "selector": "typeLike",
        "format": ["PascalCase"]
      },
      {
        "selector": "enumMember",
        "format": ["PascalCase"]
      },
      {
        "selector": "interface",
        "format": ["PascalCase"],
        "prefix": ["I"]
      },
      {
        "selector": "typeParameter",
        "format": ["PascalCase"],
        "prefix": ["T"]
      },
      {
        "selector": "function",
        "format": ["camelCase"]
      },
      {
        "selector": "property",
        "format": ["camelCase"]
      },
      {
        "selector": "method",
        "format": ["camelCase"]
      },
      {
        "selector": "class",
        "format": ["PascalCase"]
      },
      {
        "selector": "import",
        "format": ["camelCase", "PascalCase"]
      }
    ]
  }
}
